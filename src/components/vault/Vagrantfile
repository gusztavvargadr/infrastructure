directory = File.dirname(__FILE__)
require "#{directory}/../../../Vagrantfile.core"
require "#{directory}/Vagrantfile.core"

server_count = 1

environment = Environment.new(
  'vault',
  (1..server_count).map { |i| VaultServerVM.new(i) },
  consul_address: 'server-1.consul.local:8500',
  consul_token: '9ca03b8d53064957b5db56b1ddc43111',
  cli_token: '-'
)

environment.define do |config|
  config.vm.define 'ui' do |ui|
    ui.vm.synced_folder '.', '/vagrant', disabled: true

    ui.vm.provider 'docker' do |d|
      target_vm = environment.vms[0]

      d.build_dir = 'docker/ui'
      d.env = {
        'VAULT_URL_DEFAULT' => "https://#{target_vm.hostname(environment)}:8200",
        'VAULT_AUTH_DEFAULT' => 'TOKEN',
        'NODE_TLS_REJECT_UNAUTHORIZED' => 0,
      }
      d.create_args = ['--network', 'host']
    end
  end

  config.vm.define 'cli' do |cli|
    cli.vm.synced_folder '.', '/vagrant', disabled: true

    cli.vm.provider 'docker' do |d|
      target_vm = environment.vms[0]

      d.build_dir = 'docker/cli'
      d.env = {
        'VAULT_ADDR' => "https://#{target_vm.hostname(environment)}:8200",
        'VAULT_TOKEN' => environment.options[:cli_token],
      }
      d.create_args = ['--network', 'host']
      d.cmd = ['vault', 'mounts']
      d.remains_running = false
    end
  end
end
