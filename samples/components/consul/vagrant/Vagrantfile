require "#{File.dirname(__FILE__)}/../../core/vagrant/Vagrantfile.core"
require "#{File.dirname(__FILE__)}/../../../../src/components/consul/vagrant/Vagrantfile.core"

server_count = 1
client_count = 1

encrypt = 'sUi8RtZLcKoRszrsh93wHw=='
token = '9ca03b8d53064957b5db56b1ddc43111'

server_options = {
  consul: {
    tls_directory: '/etc/consul/tls',
    encrypt: encrypt,
    acl_agent_token: token,
    acl_master_token: token,
  },
}

client_options = {
  consul: {
    tls_directory: '/etc/consul/tls',
    encrypt: encrypt,
    acl_agent_token: token,
    acl_client_token: token,
  },
}

Environment.new(name: 'consul.local') do |environment|
  servers = []
  (1..server_count).each do |i|
    vm = UbuntuSampleVM.new(environment, name: "server-#{i}") do |server|
      FileProvisioner.new(server, source: "#{File.dirname(__FILE__)}/tls", destination: '/tmp/vagrant/tls')
      ShellProvisioner.new(server, inline: 'sudo rm -Rf /etc/consul/tls')
      ShellProvisioner.new(server, inline: 'sudo mv /tmp/vagrant/tls /etc/consul')
      ShellProvisioner.new(server, inline: 'sudo chown -R consul:consul /etc/consul/tls')

      ConsulServerChefSoloProvisioner.new(
        server,
        server_options.deep_merge(consul: { servers: servers.map(&:hostname) })
      )
    end
    servers.push vm
  end

  clients = []
  (1..client_count).each do |i|
    vm = UbuntuSampleVM.new(environment, name: "client-u-#{i}") do |client|
      FileProvisioner.new(client, source: "#{File.dirname(__FILE__)}/tls", destination: '/tmp/vagrant/tls')
      ShellProvisioner.new(server, inline: 'sudo rm -Rf /etc/consul/tls')
      ShellProvisioner.new(server, inline: 'sudo mv /tmp/vagrant/tls /etc/consul')
      ShellProvisioner.new(server, inline: 'sudo chown -R consul:consul /etc/consul/tls')

      ConsulClientChefSoloProvisioner.new(
        client,
        client_options.deep_merge(consul: { servers: servers.map(&:hostname) })
      )
    end
    clients.push vm

    vm = WindowsSampleVM.new(environment, name: "client-w-#{i}") do |client|
      FileProvisioner.new(client, source: "#{File.dirname(__FILE__)}/tls", destination: '/etc/consul/tls')

      ConsulClientChefSoloProvisioner.new(
        client,
        client_options.deep_merge(consul: { servers: servers.map(&:hostname) })
      )
    end
    clients.push vm
  end
end
